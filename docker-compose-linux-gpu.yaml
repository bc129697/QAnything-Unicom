services:
  elasticsearch:
    container_name: es-container-local
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    restart: unless-stopped
    user: root
    privileged: true
    # ports:
    #   - "9210:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/third_party/es/plugins:/usr/share/elasticsearch/plugins
      - esdata-rag:/usr/share/elasticsearch/data
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime
    command: >
      /bin/bash -c "
        mkdir -p /usr/share/elasticsearch/data /usr/share/elasticsearch/plugins &&
        chown -R elasticsearch:elasticsearch /usr/share/elasticsearch &&
        su elasticsearch -c '/usr/share/elasticsearch/bin/elasticsearch'
      "
    healthcheck:
      test: curl --fail http://localhost:9200/_cat/health || exit 1
      interval: 10s
      timeout: 20s
      retries: 3

  etcd: #etcd是一个分布式、高可用的键值存储系统，用于存储分布式系统中的配置信息、服务注册和发现等数据。
    container_name: milvus-etcd-local
    image: quay.io/coreos/etcd:v3.5.5
    restart: unless-stopped
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd-rag:/etcd
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 10s
      timeout: 20s
      retries: 3

  minio:  #Minio是一个分布式、高可用的对象存储系统，用于存储分布式系统中的数据，如文件、图片等。
    container_name: milvus-minio-local
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    restart: unless-stopped
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    # ports:
    #   - "9001:9001"
    #       - "9000:9000"
    volumes:
      - minio-rag:/minio_data
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone-local
    image: milvusdb/milvus:v2.5.10
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
      # MILVUS_QUOTA_AND_LIMITS_MAX_REQUEST_RATE: 10.0
      # MILVUS_QUOTA_LIMITS_ENABLED: "false"  # 禁用配额限制
      # 或设置更高的阈值：
      # MILVUS_QUOTA_LIMITS_MAX_CONNECTIONS: "10000"
      # MILVUS_QUOTA_LIMITS_MAX_REQUESTS_PER_SECOND: "10000"
    volumes:
      - milvus-rag:/var/lib/milvus
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 10s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      # - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"

  mysql:
    container_name: mysql-container-local
    privileged: true
    image: mysql:8.4
    restart: unless-stopped
    # ports:
    #   - "3316:3306"
    command: --max-connections=10000
    environment:
      - MYSQL_ROOT_PASSWORD=123456
    volumes:
      - mysql-rag:/var/lib/mysql
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime


  rag_local:
    container_name: rag-container-local
    image: darren/rag-linux-gpu:v2.1
    command: /bin/bash -c "cd /workspace/QAnything && bash scripts/entrypoint-gpu.sh"
    restart: unless-stopped
    privileged: true
    shm_size: '8gb'
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/:/workspace/QAnything/
      - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime
    ports:
      - "${RAG_SERVER_PORT:-8777}:${RAG_SERVER_PORT:-8777}"
      - "${IMAGE_NGINX_PORT:-1080}:${IMAGE_NGINX_PORT:-1080}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - NCCL_LAUNCH_MODE=PARALLEL
      - GPUID=${GPUID:-0}
      - USER_IP=${USER_IP:-0.0.0.0}
      - GATEWAY_IP=${GATEWAY_IP:-0.0.0.0}
    depends_on:
      standalone:
        condition: service_healthy
      mysql:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    tty: true
    stdin_open: true
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: "all"
              capabilities: ["gpu"]

volumes:
  esdata-rag:
    driver: local
  etcd-rag:
    driver: local
  minio-rag:
    driver: local
  milvus-rag:
    driver: local
  mysql-rag:
    driver: local


networks:
 default:
   name: RAGnetwork



