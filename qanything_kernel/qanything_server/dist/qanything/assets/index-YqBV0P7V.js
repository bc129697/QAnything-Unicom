import { d as e, Z as a, a as l, r as t, o as s, k as n, y as i, H as o, c as u, q as c, N as r, F as d, O as p, z as v, A as m, D as h, j as f, e as k, l as g, M as _, E as y, n as w, v as b, a0 as x, Q as C, W as j, J as S, K as D, aa as L, x as I, G as T, X as F, Y as q } from "./index-BVM7diGR.js"; import { u as B, D as O, f as K, h as U, C as M, T as N, _ as P, a as E } from "./ChatInfoPanel-Cxesx8km.js"; import { _ as R } from "./scroll-down-Dm5D91pw.js"; import { a as z, _ as A } from "./index-BTL0xIAV.js"; import { g as H, u as Q } from "./index-DAdVxPIc.js"; import { d as $, p as J, r as V, u as W, a as G, b as X, c as Y, C as Z, f as ee } from "./urlConfig-5Ad6E0st.js"; import { u as ae } from "./useQuickStart-BQewnUn7.js"; import { C as le, u as te } from "./useChatOperate-DPEKD_Ao.js"; import { L as se, a as ne, u as ie, p as oe } from "./useKnowledgeBase-DZuffAZO.js"; import { _ as ue, F as ce, O as re } from "./OptionList-D_gkNvez.js"; import { u as de, b as pe, C as ve } from "./useUploadFiles-DjlYc-xX.js"; import { u as me } from "./useChatSetting-CpQu1AXT.js"; import { u as he } from "./useBots-wIryKe1o.js"; import { _ as fe } from "./LeftOutlined-BC9u9Wti.js"; import "./RightOutlined-DtsVRhmk.js"; import "./operationUnit-MUxBaQJQ.js"; import "./responsiveObserve-BPfiShJR.js"; import "./class-Cc8UO9Y6.js"; import "./index-BUlNCtQT.js"; import "./debounce-Dz27Iuya.js"; import "./collapseMotion-uYR2Sbzz.js"; import "./index-CBrli1tO.js"; import "./index-MUygmPPV.js"; import "./index-BFggBRAt.js"; import "./index-K3ROrwfH.js"; import "./index-Dg7oIhYm.js"; import "./injectionKey-BS_bSTfS.js"; const ke = { class: "contain" }, ge = { key: 0, class: "loading" }, _e = { key: 1, class: "progress" }, ye = { class: "file-name" }, we = { key: 0, class: "file-extension" }, be = { key: 1, class: "file-extension" }, xe = h(e({ __name: "FileBlock", props: { fileData: {}, kbId: {}, status: {} }, emits: ["deleteFile"], setup(e, { emit: h }) { const { setChatSourceVisible: f, setSourceType: k, setSourceUrl: g, setTextContent: _ } = z(), y = h, w = e, { fileData: b, kbId: x } = a(w), C = l((() => "gray" === D.value)), j = l((() => J(b.value.file_name))), S = l((() => "red" === D.value ? "file-error" : "green" === D.value ? "file-" + L.get(j.value.fileExtension) : "file-unknown")), D = l((() => b.value.status)), L = new Map([["md", "txt"], ["txt", "txt"], ["pdf", "pdf"], ["jpg", "img"], ["png", "img"], ["jpeg", "img"], ["docx", "docx"], ["xlsx", "xlsx"], ["pptx", "ppt"], ["eml", "eml"], ["csv", "xlsx"]]), I = new Map([["gray", "上传中"], ["yellow", "解析中"], ["green", "解析成功"], ["red", "解析失败"]]), T = t(0), F = async () => { y("deleteFile", b.value.file_id, x.value) }; s((() => { (() => { let e = t(null); e.value = setInterval((async () => { var a, l, t; if ("" === b.value.file_id && "loading" !== b.value.status && (b.value.status = "red"), "green" === b.value.status || "red" === b.value.status) clearInterval(e.value), e.value = null; else { const e = await V(await W.fileList({ kb_id: x.value, file_id: b.value.file_id })); b.value.status = (null == (a = e.details[0]) ? void 0 : a.status) || "red", "yellow" === (null == (l = e.details[0]) ? void 0 : l.status) && (T.value = parseInt(null == (t = e.details[0]) ? void 0 : t.msg.match(/\d+/)[0], 10)) } }), 1e3) })() })); const q = () => { "yellow" === D.value || "green" === D.value ? O(b.value) : m.warn("解析中、解析完成才可以预览") }; let B = ["md", "txt", "pdf", "jpg", "png", "jpeg", "doc", "docx", "xls", "xlsx", "ppt", "pptx", "jsonl", "csv", "eml"]; const O = e => { (e => { if (!e) return !1; const a = e.split("."); if (a.length) { const e = a.pop(); return B.includes(e) } return !1 })(e.file_name) && async function (e) { try { g(null); const a = await V(await W.getFile({ file_id: e.file_id })), l = e.file_name.split(".").pop(), t = function (e) { const a = B.indexOf(e); return K[a] }(l); if (k(l), g(`data:${t};base64,${a.file_base64}`), "txt" === l || "md" === l) { const e = atob(a.file_base64), l = decodeURIComponent(escape(e)); _(l), f(!0) } else f(!0) } catch (a) { m.error(a.msg || "获取文件失败") } }(e) }; let K = ["text/markdown", "text/plain", "application/pdf", "image/jpeg", "image/png", "image/jpeg", "application/msword", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/vnd.ms-excel", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "application/vnd.ms-powerpoint", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "application/jsonl", "text/csv", "message/rfc822"]; return (e, a) => { const l = ue; return n(), i("div", ke, [o("div", { class: "file-icon", onClick: q }, [u(r, { name: c(S) }, null, 8, ["name"]), o("div", { class: d(c(C) || "yellow" === c(D) ? "mask" : "") }, null, 2), c(C) ? (n(), i("div", ge, [u(se)])) : p("", !0), "yellow" === c(D) ? (n(), i("div", _e, [u(l, { type: "circle", percent: c(T), size: 25 }, null, 8, ["percent"])])) : p("", !0)]), o("div", { class: "file-info", onClick: q }, [o("span", ye, v(c(j).fileName), 1), "green" === c(D) ? (n(), i("span", we, v(c(j).fileExtension.toUpperCase()) + ", " + v(c($)(c(b).bytes) || 0), 1)) : (n(), i("span", be, v(c(I).get(c(D))), 1))]), "toBeSend" === e.status ? (n(), i("div", { key: 0, class: "file-close", onClick: F }, [u(r, { name: "close" })])) : p("", !0)]) } } }), [["__scopeId", "data-v-8f689a2b"]]), Ce = e => (F("data-v-bf8dee82"), e = e(), q(), e), je = { class: "container" }, Se = { key: 1, class: "my-page" }, De = { key: 0, class: "user" }, Le = Ce((() => o("img", { class: "avatar", src: P, alt: "头像" }, null, -1))), Ie = { class: "question-inner" }, Te = { class: "question-text" }, Fe = { key: 0, class: "file-list-box" }, qe = { key: 1, class: "ai" }, Be = Ce((() => o("img", { class: "avatar", src: E, alt: "头像" }, null, -1))), Oe = { class: "ai-content" }, Ke = { class: "ai-right" }, Ue = { key: 0 }, Me = { key: 1 }, Ne = { class: "source-list" }, Pe = { class: "control" }, Ee = { class: "tips" }, Re = ["href"], ze = ["onClick"], Ae = { class: "source-content" }, He = { class: "score" }, Qe = { class: "tips" }, $e = { class: "tips" }, Je = ["onClick"], Ve = { key: 1, class: "feed-back" }, We = ["onClick"], Ge = { class: "reload-text" }, Xe = { class: "tools" }, Ye = { key: 0, class: "stop-btn" }, Ze = { class: "question-box" }, ea = { class: "question" }, aa = { key: 0, class: "file-list-box" }, la = { class: "send-box" }, ta = { class: "send-action" }, sa = h(e({ __name: "index", setup(e) { const { handleChatSourceBlank: a, handleChatSourceChunk: h } = ne(), { common: F, home: q } = H(), { QA_List: P, chatId: E, kbId: z, kbIdCopy: $, showLoading: J } = f(ae()), { addHistoryList: se, updateHistoryList: ue, addChatList: ke, clearChatList: ge, getHistoryById: _e, renameHistory: ye, addFileToBeSendList: we } = ae(), { setCopyUrlVisible: be, setWebUrl: Ce } = he(), { chatSettingFormActive: sa } = f(me()), { showDefault: na } = f(ie()), { setModalVisible: ia, setModalTitle: oa } = de(), { uploadFileListQuick: ua } = f(pe()), { initUploadFileListQuick: ca } = pe(), { language: ra } = f(Q()), { like: da, unlike: pa, copy: va, deleteChatItem: ma } = te(), ha = l((() => _e(E.value))), fa = new N((e => { e && (P.value[P.value.length - 1].answer += e || "") })), ka = t(""), ga = l((() => { const e = sa.value.context; if (0 === e) return []; const a = P.value.filter((e => "ai" === e.type)); return (1 === e ? a : a.slice(-e)).map((e => [e.question, e.answer.replace(/<think>([\s\S]*?)<\/think>/g, "").replace(/<response>/g, "").replace(/<\/response>/g, "")])) })), _a = t([]); let ya; const wa = t(null), ba = t(null), xa = () => { x((() => { var e; null == (e = ba.value) || e.scrollIntoView({ behavior: "smooth", block: "end" }) })) }, Ca = l((() => { var e; return ((null == (e = ha.value) ? void 0 : e.fileToBeSendList.concat(null == ua ? void 0 : ua.value)) || []).filter((e => 0 !== e.file_id.length)) })); s((() => { $.value && (z.value = $.value), xa() })), k((() => { ja() })); const ja = () => { ua.value.length && (we(E.value, [...ua.value]), ca()) }; window.addEventListener("beforeunload", ja); const Sa = e => { 13 === e.keyCode && (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey ? ka.value += "\n" : Fa(), e.preventDefault()) }, Da = async (e, a) => { try { await V(await W.deleteFile({ file_ids: [e], kb_id: a })), m.success("删除成功"); const l = ua.value.findIndex((a => a.file_id === e)); -1 !== l ? ua.value.splice(l, 1) : ha.value.fileToBeSendList = ha.value.fileToBeSendList.filter((a => a.file_id !== e)) } catch (l) { m.error(l.msg || "删除失败") } }, La = e => { P.value.push({ answer: "", question: e, onlySearch: sa.value.capabilities.onlySearch, type: "ai", copied: !1, like: !1, unlike: !1, source: [], showTools: !1 }) }, Ia = new Z, Ta = () => { ya && ya.abort(), fa.done(), J.value = !1, P.value[P.value.length - 1].showTools = !0 }, Fa = async () => { if (!ka.value.trim().length) return; if (J.value) return void m.warn("正在聊天中...请等待结束"); if (!(await za())) return void m.error("模型设置错误，请先检查模型配置"); const e = ka.value; await (async e => { try { if (null !== E.value) return void ("未命名对话" === _e(E.value).title && ye(E.value, e)); e.length > 100 && (e = e.substring(0, 100)); const a = await V(await W.createKb({ kb_name: e })); z.value = a.kb_id, E.value = se(e), ue(e, E.value, z.value) } catch (a) { m.error(a.msg || "创建对话失败") } })(e), ka.value = "", (e => { P.value.push({ question: e, type: "user", fileDataList: [...Ca.value.filter((e => "red" !== e.status))] }), xa() })(e), ke(E.value, P.value), ca(), ha.value.fileToBeSendList = [], J.value = !0, ya = new AbortController; const a = { kb_ids: [z.value], history: ga.value, question: e, streaming: !1 === sa.value.capabilities.onlySearch, networking: sa.value.capabilities.networkSearch, product_source: "saas", rerank: sa.value.capabilities.rerank, only_need_search_results: sa.value.capabilities.onlySearch, hybrid_search: sa.value.capabilities.mixedSearch, max_token: sa.value.maxToken, api_base: sa.value.apiBase, api_key: sa.value.apiKey, model: sa.value.apiModelName, api_context_length: sa.value.apiContextLength, chunk_size: sa.value.chunkSize, top_p: sa.value.top_P, top_k: sa.value.top_K, temperature: sa.value.temperature }; if (sa.value.capabilities.onlySearch) { Ia.addChatSetting(sa.value), La(e); try { const e = await V(await W.sendQuestion(a)); 200 === e.code && (P.value[P.value.length - 1].answer = (null == e ? void 0 : e.source_documents.length) ? F.searchCompleted : F.searchNotFound, P.value[P.value.length - 1].source = null == e ? void 0 : e.source_documents) } catch (l) { m.error(l.msg || "出错了"), P.value[P.value.length - 1].answer = l || "error" } J.value = !1, P.value[P.value.length - 1].showTools = !0, ke(E.value, P.value), await x((() => { xa() })) } else K(Y + "/rag/local_doc_chat", { method: "POST", headers: { "Content-Type": "application/json", Accept: ["text/event-stream", "application/json"] }, openWhenHidden: !0, body: JSON.stringify({ user_id: G, user_info: X, ...a }), signal: ya.signal, onopen(a) { La(e), a.ok && "text/event-stream" === a.headers.get("content-type") ? (Ia.addChatSetting(sa.value), fa.start()) : "application/json" === a.headers.get("content-type") && fa.add("Error 请检查模型是否配置正确") }, onmessage(e) { var a, l; const t = JSON.parse(e.data); if (200 == (null == t ? void 0 : t.code) && (null == t ? void 0 : t.response) && "success" === t.msg) fa.add(null == t ? void 0 : t.response), xa(); else { delete t.time_record.time_usage.retriever_search_by_milvus, Ia.addTime(t.time_record.time_usage), Ia.addToken(t.time_record.token_usage), Ia.addDate(Date.now()) } (null == (a = null == t ? void 0 : t.source_documents) ? void 0 : a.length) && (P.value[P.value.length - 1].source = null == t ? void 0 : t.source_documents), (null == (l = null == t ? void 0 : t.show_images) ? void 0 : l.length) && (null == t || t.show_images.map((e => { fa.add(e) }))) }, onclose(e) { fa.done(), ya.abort(), J.value = !1, P.value[P.value.length - 1].showTools = !0, P.value.at(-1).itemInfo = Ia.getChatInfo(), ke(E.value, P.value), x((() => { xa() })) }, onerror(e) { throw null == fa || fa.done(), null == ya || ya.abort(), J.value = !1, P.value[P.value.length - 1].showTools = !0, m.error(e.msg || "出错了"), ke(E.value, P.value), x((() => { xa() })), e } }) }, qa = async () => { if (null !== E.value) try { const { bot_id: e } = await V(await W.createBot({ bot_name: "bot-" + ee(Date.now()), description: "来源: 快速开始创建-" + ee(Date.now()) })); await V(await W.updateBot({ bot_id: e, kb_ids: [z.value], only_need_search_results: sa.value.capabilities.onlySearch, networking: sa.value.capabilities.networkSearch, api_base: sa.value.apiBase, api_key: sa.value.apiKey, api_context_length: sa.value.apiContextLength, top_p: sa.value.top_P, temperature: sa.value.temperature, top_k: sa.value.top_K, model: sa.value.apiModelName, max_token: sa.value.maxToken, hybrid_search: sa.value.capabilities.mixedSearch, chunk_size: sa.value.chunkSize, rerank: sa.value.capabilities.rerank })), be(!0); const { origin: a, pathname: l } = window.location; Ce(`${a + l}#/bots/${e}/share`) } catch (e) { m.error((null == e ? void 0 : e.msg) || "分享失败") } }, { showModal: Ba } = f(B()), Oa = t(!1), Ka = t(""), Ua = t(""), Ma = () => { J.value || z.value && (ia(!0), oa(q.upload)) }, Na = () => { J.value || (Ua.value = "download", Ba.value = !0, Ka.value = F.saveTip) }, Pa = async () => { if (Oa.value = !0, "download" === Ua.value) try { const e = document.getElementById("chat-ul"), a = (await U(e, { useCORS: !0 })).toDataURL("image/png"), l = document.createElement("a"); l.style.display = "none", l.href = a, l.setAttribute("download", "chat-shot.png"), void 0 === l.download && l.setAttribute("target", "_blank"), document.body.appendChild(l), l.click(), document.body.removeChild(l), window.URL.revokeObjectURL(a), m.success("下载成功"), await Promise.resolve() } catch (e) { m.error(e.message || e.msg || "出错了") } else "delete" === Ua.value && (ge(E.value), E.value = null, P.value = []); Ua.value = "", Ka.value = "", Oa.value = !1, Ba.value = !1 }, { showSettingModal: Ea } = f(B()), Ra = t(), za = () => Ra.value.handleOk(); let Aa = ["md", "txt", "pdf", "jpg", "png", "jpeg", "doc", "docx", "xls", "xlsx", "ppt", "pptx", "jsonl", "csv", "eml"]; const Ha = e => { if (!e) return !1; const a = e.split("."); if (a.length) { const e = a.pop(); return Aa.includes(e) } return !1 }; k((() => { Qa() })); const Qa = () => { $.value = z.value, z.value = "" }; return window.addEventListener("onbeforeunload", Qa), (e, l) => { const t = C, s = j, m = fe; return n(), i(_, null, [o("div", je, [c(na) === c(oe).optionlist ? (n(), g(re, { key: 0 })) : (n(), i("div", Se, [o("div", { id: "chat", ref_key: "chatContainer", ref: wa, class: "chat" }, [o("ul", { id: "chat-ul", ref_key: "scrollDom", ref: ba }, [(n(!0), i(_, null, y(c(P), ((e, l) => { var t, s; return n(), i("li", { key: l }, ["user" === e.type ? (n(), i("div", De, [Le, o("div", Ie, [o("p", Te, v(e.question), 1), e.fileDataList.length ? (n(), i("div", Fe, [(n(!0), i(_, null, y(e.fileDataList, (e => (n(), g(xe, { key: e.file.lastModified, "file-data": e, "kb-id": c(z), "chat-id": c(E), status: "send" }, null, 8, ["file-data", "kb-id", "chat-id"])))), 128))])) : p("", !0)])])) : (n(), i("div", qe, [Be, o("div", Oe, [o("div", Ke, [o("p", { class: d(["question-text", [e.source.length || (null == (t = null == e ? void 0 : e.picList) ? void 0 : t.length) ? "" : "change-radius", e.showTools ? "" : "flashing"]]) }, [u(A, { content: e.answer }, null, 8, ["content"]), Object.keys((null == (s = null == e ? void 0 : e.itemInfo) ? void 0 : s.tokenInfo) || {}).length && e.showModelInfo ? (n(), g(M, { key: 0, "chat-item-info": e.itemInfo }, null, 8, ["chat-item-info"])) : p("", !0)], 2), e.source.length ? (n(), i(_, { key: 0 }, [o("div", { class: d(["source-total", c(_a).includes(l) ? "" : "source-total-last"]) }, ["zh" === c(ra) ? (n(), i("span", Ue, " 找到了" + v(e.source.length) + "个信息来源： ", 1)) : (n(), i("span", Me, " Found " + v(e.source.length) + " source of information ", 1)), S(u(r, { name: "down", onClick: e => (e => { _a.value.push(e) })(l) }, null, 8, ["onClick"]), [[D, !c(_a).includes(l)]]), S(u(r, { name: "up", onClick: e => (e => { _a.value = _a.value.filter((a => a !== e)) })(l) }, null, 8, ["onClick"]), [[D, c(_a).includes(l)]])], 2), u(L, { name: "source-list" }, { default: w((() => [S(o("div", Ne, [(n(!0), i(_, null, y(e.source, ((l, t) => (n(), i("div", { key: t, class: "data-source" }, [S(o("p", Pe, [o("span", Ee, v(c(F).dataSource) + v(t + 1) + ":", 1), l.file_url.startsWith("http") ? (n(), i("a", { key: 0, href: l.file_url, target: "_blank" }, v(l.file_name), 9, Re)) : (n(), i("span", { key: 1, class: d(["file", Ha(l.file_name) ? "filename-active" : ""]), onClick: e => c(a)(l) }, v(l.file_name), 11, ze)), S(u(r, { name: "iconup", onClick: a => ((e, a) => { e.source[a].showDetailDataSource = !1 })(e, t) }, null, 8, ["onClick"]), [[D, l.showDetailDataSource]]), S(u(r, { name: "icondown", onClick: a => ((e, a) => { e.source[a].showDetailDataSource = !e.source[a].showDetailDataSource })(e, t) }, null, 8, ["onClick"]), [[D, !l.showDetailDataSource]])], 512), [[D, l.file_name]]), u(L, { name: "source-list" }, { default: w((() => [S(o("div", Ae, [u(A, { content: l.content }, null, 8, ["content"]), o("p", He, [o("span", Qe, v(c(F).correlation), 1), I(" " + v(l.score), 1)])], 512), [[D, l.showDetailDataSource]])])), _: 2 }, 1024), o("span", $e, v(c(F).chunkIndex) + ":", 1), o("span", { class: "filename-active", onClick: e => c(h)(l) }, v(l.doc_id ? Number(l.doc_id.split("_")[1]) + 1 : l.doc_limit[0] === l.doc_limit[1] ? Number(l.doc_limit[1]) + 1 : l.doc_limit[1] >= 0 ? `${l.doc_limit[0] + 1} 到 ${l.doc_limit[1] + 1}` : "所有片段"), 9, Je)])))), 128))], 512), [[D, c(_a).includes(l)]])])), _: 2 }, 1024)], 64)) : p("", !0), e.showTools ? (n(), i("div", Ve, [o("div", { class: "reload-box", onClick: a => (e => { ka.value = e.question, Fa() })(e) }, [u(r, { name: "reload" }), o("span", Ge, v(c(F).regenerate), 1)], 8, We), o("div", Xe, [u(r, { style: T({ color: e.copied ? "#4D71FF" : "" }), name: "copy", onClick: a => c(va)(e) }, null, 8, ["style", "onClick"]), u(r, { style: T({ color: e.like ? "#4D71FF" : "" }), name: "like", onClick: a => c(da)(e) }, null, 8, ["style", "onClick"]), u(r, { style: T({ color: e.unlike ? "#4D71FF" : "" }), name: "unlike", onClick: a => c(pa)(e) }, null, 8, ["style", "onClick"]), u(r, { class: "delete-icon", name: "delete", onClick: a => c(ma)(e, c(P)) }, null, 8, ["onClick"])])])) : p("", !0)])])]))]) })), 128))], 512)], 512), c(J) ? (n(), i("div", Ye, [u(t, { onClick: Ta }, { icon: w((() => [u(r, { name: "stop", class: d(c(J) ? "loading" : "") }, null, 8, ["class"])])), default: w((() => [I(" " + v(c(F).stop), 1)])), _: 1 })])) : p("", !0), o("div", Ze, [o("div", ea, [c(Ca).length ? (n(), i("div", aa, [(n(!0), i(_, null, y(c(Ca), (e => (n(), g(xe, { key: e.file_id, "file-data": e, "kb-id": c(z), "chat-id": c(E), status: "toBeSend", onDeleteFile: Da }, null, 8, ["file-data", "kb-id", "chat-id"])))), 128))])) : p("", !0), o("div", la, [u(s, { value: c(ka), "onUpdate:value": l[0] || (l[0] = e => b(ka) ? ka.value = e : null), class: "send-textarea", "max-length": "200", bordered: !1, placeholder: c(F).problemPlaceholder, "auto-size": { minRows: 1, maxRows: 8 }, onKeydown: Sa }, null, 8, ["value", "placeholder"]), o("div", ta, [u(m, null, { content: w((() => [I(v(c(E) ? c(F).chatShare : c(F).chatShareNoChatId), 1)])), default: w((() => [o("span", { class: d(["question-icon", c(J) || !c(E) ? "isPreventClick" : ""]), onClick: qa }, [u(r, { name: "chat-share" })], 2)])), _: 1 }), u(m, null, { content: w((() => [I(v(c(z) ? c(F).chatUpload : c(F).chatUploadNoKbId), 1)])), default: w((() => [o("span", { class: d(["question-icon", c(J) || !c(z) ? "isPreventClick" : ""]), onClick: Ma }, [u(r, { name: "chat-upload" })], 2)])), _: 1 }), u(m, null, { content: w((() => [I(v(c(F).chatToPic), 1)])), default: w((() => [o("span", { class: d(["question-icon", c(J) ? "isPreventClick" : ""]), onClick: Na }, [u(r, { name: "chat-download" })], 2)])), _: 1 }), u(m, null, { content: w((() => [I(v(c(F).modelSettingTitle), 1)])), default: w((() => [o("span", { class: "question-icon", onClick: l[1] || (l[1] = e => { return a = !0, void (Ea.value = a); var a }) }, [u(r, { name: "chat-setting" })])])), _: 1 }), u(t, { type: "primary", disabled: c(J), shape: "circle", onClick: Fa }, { default: w((() => [u(r, { name: "sendplane" })])), _: 1 }, 8, ["disabled"])])])])]), u(ce, { "dialog-type": 1 })])), o("div", { class: "scroll-btn-div" }, [o("img", { class: "avatar", src: R, alt: "滑到底部", onClick: xa })])]), u(le, { ref_key: "chatSettingForDialogRef", ref: Ra }, null, 512), u(O, { content: c(Ka), "confirm-loading": c(Oa), onOk: Pa }, null, 8, ["content", "confirm-loading"]), u(ve)], 64) } } }), [["__scopeId", "data-v-bf8dee82"]]); export { sa as default };
